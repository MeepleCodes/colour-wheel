import csv, sys, json

SLICE_THICK = slice(7,13)
SLICE_THIN = slice(1,7)

SLICE = SLICE_THICK

paints_thick = []
paints_thin = []

def to_colour(rowslice):
    return {
        "munsell": [rowslice[0], float(rowslice[1]), float(rowslice[2])],
        "lab": [float(f) for f in rowslice[3:6]]
    }

with open(sys.argv[1], newline='') as csvfile:
    csvreader = csv.reader(csvfile)
    # Skip the header row
    next(csvreader)
    for row in csvreader:
        paints_thick.append({
            "name": row[0].strip(),
            **to_colour(row[SLICE_THICK])
        })
        paints_thin.append({
            "name": row[0].strip(),
            **to_colour(row[SLICE_THIN])
        })

def json_paints(paints):
    return ",\n".join(json.dumps(paint) for paint in paints)

filecontents = f"""
/** Autogenerated paint color value list
 * This file was autogenerated from {sys.argv[1]} using {__file__}
 * It provides thin film and thick disc colour values for
 * each paint colour in the input file (currently Golden Acrylic) in Munsell and CIE L*A*B* 
 * coordinates.
 **/
import {{ Swatch }} from './Swatch';
export type GoldenAcrylicNames = {' | '.join(f'"{p["name"]}"' for p in paints_thick)};
export const goldenAcrylicsThick: Swatch[] = [{json_paints(paints_thick)}];
export const goldenAcrylicsThin: Swatch[] = [{json_paints(paints_thin)}];
"""
if len(sys.argv) < 2 or sys.argv[2] == "-":
    print(filecontents)
else:
    with open(sys.argv[2], "w") as outfile:
        outfile.write(filecontents)